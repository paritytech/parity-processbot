variables:
  KUBE_NAMESPACE:                  "processbot"
  CI_REGISTRY:                     "paritytech"
  CI_IMAGE:                        "paritytech/ci-linux@sha:1bfa70a6ef4e36afb7cb8395b7ddfdc5ce62c3f039f219212be0c253c1a7b173"
  BUILDAH_IMAGE:                   "quay.io/buildah/stable:v1.27"
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       3
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  GITHUB_ORGANIZATION:             "paritytech"

default:
  image: $CI_IMAGE
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - linux-docker

stages:
  - check
  - test
  - build
  - dockerize
  - deploy

#### stage:                        check

check:
  stage:                           check
  script:
    - cargo fmt --all -- --check
    - cargo check --all-targets --workspace
    - cargo clippy --all-targets --workspace -- -Dwarnings

#### stage:                        test

integration-tests:
  stage:                           test
  script:
    - ./scripts/run_integration_tests.sh

tests:
  stage:                           test
  script:
    - cargo test --lib

#### stage:                        build

build:
  stage:                           build
  script:
    - cargo build --release
    - mkdir -p ./artifacts/
    - cp ${CARGO_TARGET_DIR}/release/parity-processbot ./artifacts/
    - cp ./Dockerfile ./artifacts/
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     1 hour
    paths:
      - ./artifacts/

#### stage:                        dockerize

.build_and_push:                   &build_and_push
  image:                           $BUILDAH_IMAGE
  variables:
    GIT_STRATEGY:                  none
    DOCKER_IMAGE:                  "${CI_REGISTRY}/${KUBE_NAMESPACE}"
  interruptible:                   true
  script:
    - cd ./artifacts
    - buildah bud
      --format=docker
      --tag "$DOCKER_IMAGE:$CI_COMMIT_REF_NAME" .
    - echo "$Docker_Hub_Pass_Parity" |
        buildah login --username "$Docker_Hub_User_Parity" --password-stdin docker.io
    - buildah push --format=v2s2 "$DOCKER_IMAGE:$CI_COMMIT_REF_NAME"
  tags:
    - kubernetes-parity-build

dockerize-processbot:
  stage:                           dockerize
  <<:                              *build_and_push
  needs:
    - job:                         build
      artifacts:                   true
  only:
    - tags

#### stage:                        deploy

.deploy-k8s:                       &deploy-k8s
  image:                           paritytech/kubetools:3.5.3
  interruptible:                   true
  # PROCESSBOT_KEY should be base64 encoded
  script:
    - helm upgrade processbot ./helm
      --install
      --namespace "${KUBE_NAMESPACE}"
      --values "helm/values-${CI_ENVIRONMENT_NAME}.yaml"
      --set "app.INSTALLATION_LOGIN=${GITHUB_ORGANIZATION}"
      --set "app.KUBE_NAMESPACE=${KUBE_NAMESPACE}"
      --set "app.DOCKER_TAG=${CI_COMMIT_REF_NAME}"
      --set "app.PROCESSBOT_KEY=${PROCESSBOT_KEY}"
      --set "app.GITHUB_APP_ID=${GITHUB_APP_ID}"
      --set "app.WEBHOOK_SECRET=${WEBHOOK_SECRET}"
      --set "app.TEAM_LEADS_TEAM=${TEAM_LEADS_TEAM}"
      --set "app.CORE_DEVS_TEAM=${CORE_DEVS_TEAM}"

deploy-staging:
  stage:                           deploy
  <<:                              *deploy-k8s
  environment:
    name: staging
  tags:
    - kubernetes-parity-build
  only:
    - /^pre-v[0-9]+\.[0-9]+.*$/

deploy-production:
  stage:                           deploy
  <<:                              *deploy-k8s
  environment:
    name: parity-prod
  tags:
    - kubernetes-parity-build
  only:
    - /^v[0-9]+\.[0-9]+.*$/
