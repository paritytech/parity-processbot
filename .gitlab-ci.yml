variables:
  KUBE_NAMESPACE:                  "processbot"
  CI_REGISTRY:                     "paritytech"
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       3
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  VAULT_SERVER_URL:                "https://vault.parity-mgmt-vault.parity.io"
  VAULT_AUTH_PATH:                 "gitlab-parity-io-jwt"
  VAULT_AUTH_ROLE:                 "cicd_gitlab_parity_${CI_PROJECT_NAME}"

stages:
  - check
  - test
  - dockerize
  - deploy-staging
  - deploy

.docker-env:                       &docker-env
  image:                           paritytech/ci-linux:production
  before_script:
    - rustup show
    - cargo --version
    - sccache -s
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  dependencies:                    []
  interruptible:                   true
  tags:
    - linux-docker

#### stage:                        check

check:
  stage:                           check
  <<:                              *docker-env
  script:
    - rustup component add rustfmt
    - cargo fmt --all -- --check
    - cargo clippy -- -Dwarnings

#### stage:                        test

test-build:
  stage:                           test
  <<:                              *docker-env
  script:
    - cargo test --release --all
    - cargo build --release
  after_script:
    - mkdir -p ./artifacts/
    - cp ${CARGO_TARGET_DIR}/release/parity-processbot ./artifacts/
    - cp ./Dockerfile ./artifacts/
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - ./artifacts/

#### stage:                        dockerize

.build_and_push:                   &build_and_push
  image:                           quay.io/buildah/stable
  variables:
    GIT_STRATEGY:                  none
    DOCKER_IMAGE:                  "${CI_REGISTRY}/${KUBE_NAMESPACE}"
  interruptible:                   true
  secrets:
      DOCKER_HUB_USER:
        vault:                     cicd/gitlab/parity/DOCKER_HUB_USER@kv
        file:                      false
      DOCKER_HUB_PASS:
        vault:                     cicd/gitlab/parity/DOCKER_HUB_PASS@kv
        file:                      false
  script:
    - cd ./artifacts
    - buildah bud
      --format=docker
      --tag "$DOCKER_IMAGE:$CI_COMMIT_REF_NAME" .
    - echo "$DOCKER_HUB_PASS" |
        buildah login --username "$DOCKER_HUB_USER" --password-stdin docker.io
    - buildah push --format=v2s2 "$DOCKER_IMAGE:$CI_COMMIT_REF_NAME"
  tags:
    - kubernetes-parity-build

dockerize-processbot:
  stage:                           dockerize
  <<:                              *build_and_push
  needs:
    - job:                         test-build
      artifacts:                   true
  only:
    - tags

#### stage:                        deploy

.deploy-k8s:                       &deploy-k8s
  image:                           paritytech/kubetools:3.5.3
  interruptible:                   true
  secrets:
    BAMBOO_TOKEN:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/BAMBOO_TOKEN@kv
      file:                        false
    GITLAB_PRIVATE_TOKEN:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/GITLAB_PRIVATE_TOKEN@kv
      file:                        false
    MATRIX_ACCESS_TOKEN:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/MATRIX_ACCESS_TOKEN@kv
      file:                        false
    PROCESSBOT_KEY:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/$CI_ENVIRONMENT_NAME/PROCESSBOT_KEY@kv
      file:                        false
    GITHUB_APP_ID:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/$CI_ENVIRONMENT_NAME/GITHUB_APP_ID@kv
      file:                        false
    WEBHOOK_SECRET:
      vault:                       cicd/gitlab/$CI_PROJECT_PATH/$CI_ENVIRONMENT_NAME/WEBHOOK_SECRET@kv
      file:                        false
  # PROCESSBOT_KEY should be base64 encoded
  script:
    - helm upgrade processbot kubernetes/processbot
      --install
      --namespace "${KUBE_NAMESPACE}"
      --values "kubernetes/processbot/values-${CI_ENVIRONMENT_NAME}.yaml"
      --set "dockerTag=${CI_COMMIT_REF_NAME}"
      --set "processbot.secret.PROCESSBOT_KEY=${PROCESSBOT_KEY}"
      --set "processbot.secret.BAMBOO_TOKEN=${BAMBOO_TOKEN}"
      --set "processbot.secret.MATRIX_ACCESS_TOKEN=${MATRIX_ACCESS_TOKEN}"
      --set "processbot.secret.WEBHOOK_SECRET=${WEBHOOK_SECRET}"
      --set "processbot.secret.GITLAB_PRIVATE_TOKEN=${GITLAB_PRIVATE_TOKEN}"
      --set "processbot.secret.GITHUB_APP_ID=${GITHUB_APP_ID}"

deploy-staging:
  stage:                           deploy-staging
  <<:                              *deploy-k8s
  environment:
    name: staging
  tags:
    - kubernetes-parity-build
  only:
    - /^pre-v[0-9]+\.[0-9]+.*$/

deploy-production:
  stage:                           deploy
  <<:                              *deploy-k8s
  environment:
    name: parity-prod
  tags:
    - kubernetes-parity-build
  only:
    - /^v[0-9]+\.[0-9]+.*$/
