variables:
  KUBE_NAMESPACE:                  "processbot"
  CI_REGISTRY:                     "paritytech"
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       3
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"

stages:
  - check
  - test
  - dockerize
  - deploy-staging
  - deploy

.docker-env:                       &docker-env
  image:                           paritytech/ci-linux:production
  before_script:
    - rustup show
    - cargo --version
    - sccache -s
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  dependencies:                    []
  interruptible:                   true
  tags:
    - linux-docker

#### stage:                        check

check:
  stage:                           check
  <<:                              *docker-env
  script:
    - rustup component add rustfmt
    - cargo fmt --all -- --check

#### stage:                        test

test-build:
  stage:                           test
  <<:                              *docker-env
  script:
    - cargo test --release --all
    - cargo build --release
  after_script:
    - mkdir -p ./artifacts/
    - cp ${CARGO_TARGET_DIR}/release/parity-processbot ./artifacts/
    - cp ./Dockerfile ./artifacts/
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - ./artifacts/

#### stage:                        dockerize

.build_and_push:                   &build_and_push
  image:                           docker:git
  services:
    - docker:dind
  variables:
    GIT_STRATEGY:                  none
    DOCKER_DRIVER:                 overlay2
    DOCKER_HOST:                   tcp://localhost:2375
    DOCKER_IMAGE:                  "${CI_REGISTRY}/${KUBE_NAMESPACE}"
  interruptible:                   true
  script:
    - docker login -u "$Docker_Hub_User_Parity" -p "$Docker_Hub_Pass_Parity"
    - cd ./artifacts
    - docker build -t "$DOCKER_IMAGE:$CI_COMMIT_REF_NAME" .
    - docker push "$DOCKER_IMAGE:$CI_COMMIT_REF_NAME"
  tags:
    - kubernetes-parity-build
      
dockerize-processbot:
  stage:                           dockerize
  <<:                              *build_and_push
  needs:
    - job:                         test-build
      artifacts:                   true
  environment:
    name:                          parity-build
  only:
    - tags

#### stage:                        deploy

.deploy-k8s:                       &deploy-k8s
  image:                           paritytech/kubetools:helm3
  interruptible:                   true
  script:
    - helm upgrade processbot kubernetes/processbot
      --install
      --namespace ${KUBE_NAMESPACE}
      --values kubernetes/processbot/values-${CI_ENVIRONMENT_NAME}.yaml
      --set dockerTag=${CI_COMMIT_REF_NAME}
      --set processbot.secret.PROCESSBOT_KEY=${PROCESSBOT_KEY}
      --set processbot.secret.BAMBOO_TOKEN=${BAMBOO_TOKEN}
      --set processbot.secret.MATRIX_ACCESS_TOKEN=${MATRIX_ACCESS_TOKEN}
      --set processbot.secret.WEBHOOK_SECRET=${WEBHOOK_SECRET}

deploy-staging:
  stage:                           deploy-staging
  <<:                              *deploy-k8s
  environment:
    name: staging
  tags:
    - kubernetes-parity-build
  only:
    - /^pre-v[0-9]+\.[0-9]+.*$/

deploy-production:
  stage:                           deploy
  <<:                              *deploy-k8s
  environment:
    name: parity-prod
  tags:
    - kubernetes-parity-build
  only:
    - /^v[0-9]+\.[0-9]+.*$/
